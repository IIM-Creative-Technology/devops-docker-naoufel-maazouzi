[{"D:\\Projet React\\site-streaming\\src\\index.js":"1","D:\\Projet React\\site-streaming\\src\\redux\\rootReducer.js":"2","D:\\Projet React\\site-streaming\\src\\App.js":"3","D:\\Projet React\\site-streaming\\src\\serviceWorker.js":"4","D:\\Projet React\\site-streaming\\src\\redux\\filmSearch\\filmSearchReducers.js":"5","D:\\Projet React\\site-streaming\\src\\redux\\filmsDetails\\filmsDetailsReducers.js":"6","D:\\Projet React\\site-streaming\\src\\Components\\Backdrop\\Backdrop.js":"7","D:\\Projet React\\site-streaming\\src\\redux\\filmWithGenres\\filmWithGenresReducers.js":"8","D:\\Projet React\\site-streaming\\src\\Components\\SideDrawer\\SideDrawer.js":"9","D:\\Projet React\\site-streaming\\src\\Components\\Navbar\\Header.jsx":"10","D:\\Projet React\\site-streaming\\src\\Components\\FilmsDetails\\FilmsDetails.jsx":"11","D:\\Projet React\\site-streaming\\src\\Components\\FilmsWithGenres\\FilmsWithGenres.jsx":"12","D:\\Projet React\\site-streaming\\src\\redux\\filmWithGenres\\types.js":"13","D:\\Projet React\\site-streaming\\src\\redux\\filmsDetails\\types.js":"14","D:\\Projet React\\site-streaming\\src\\redux\\filmSearch\\types.js":"15","D:\\Projet React\\site-streaming\\src\\Components\\SideDrawer\\DrawerToggleButton.js":"16","D:\\Projet React\\site-streaming\\src\\redux\\filmWithGenres\\filmWithGenresActions.js":"17","D:\\Projet React\\site-streaming\\src\\redux\\filmSearch\\filmSearchActions.js":"18","D:\\Projet React\\site-streaming\\src\\redux\\filmsDetails\\filmsDetailsActions.js":"19","D:\\Projet React\\site-streaming\\src\\Components\\Pagination\\Pagination.jsx":"20"},{"size":861,"mtime":1581593479313,"results":"21","hashOfConfig":"22"},{"size":458,"mtime":1581607805861,"results":"23","hashOfConfig":"22"},{"size":1896,"mtime":1581810237414,"results":"24","hashOfConfig":"22"},{"size":5003,"mtime":499162500000,"results":"25","hashOfConfig":"22"},{"size":866,"mtime":1581606969781,"results":"26","hashOfConfig":"22"},{"size":698,"mtime":1581607747333,"results":"27","hashOfConfig":"22"},{"size":175,"mtime":1580572232888,"results":"28","hashOfConfig":"22"},{"size":1022,"mtime":1581670928734,"results":"29","hashOfConfig":"22"},{"size":1374,"mtime":1581101146670,"results":"30","hashOfConfig":"22"},{"size":2755,"mtime":1581808960151,"results":"31","hashOfConfig":"22"},{"size":1709,"mtime":1581808932984,"results":"32","hashOfConfig":"22"},{"size":2817,"mtime":1581779677481,"results":"33","hashOfConfig":"22"},{"size":142,"mtime":1581536319019,"results":"34","hashOfConfig":"22"},{"size":140,"mtime":1581607466917,"results":"35","hashOfConfig":"22"},{"size":209,"mtime":1581606878819,"results":"36","hashOfConfig":"22"},{"size":382,"mtime":1580571461156,"results":"37","hashOfConfig":"22"},{"size":961,"mtime":1581788969288,"results":"38","hashOfConfig":"22"},{"size":1127,"mtime":1581607190023,"results":"39","hashOfConfig":"22"},{"size":963,"mtime":1581607942551,"results":"40","hashOfConfig":"22"},{"size":2261,"mtime":1581779344311,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1pankp2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},"D:\\Projet React\\site-streaming\\src\\index.js",[],["87","88"],"D:\\Projet React\\site-streaming\\src\\redux\\rootReducer.js",[],"D:\\Projet React\\site-streaming\\src\\App.js",[],"D:\\Projet React\\site-streaming\\src\\serviceWorker.js",[],"D:\\Projet React\\site-streaming\\src\\redux\\filmSearch\\filmSearchReducers.js",[],"D:\\Projet React\\site-streaming\\src\\redux\\filmsDetails\\filmsDetailsReducers.js",[],"D:\\Projet React\\site-streaming\\src\\Components\\Backdrop\\Backdrop.js",[],"D:\\Projet React\\site-streaming\\src\\redux\\filmWithGenres\\filmWithGenresReducers.js",[],"D:\\Projet React\\site-streaming\\src\\Components\\SideDrawer\\SideDrawer.js",["89","90","91","92","93","94"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './SideDrawer.css';\r\n\r\nconst sideDrawer = ({ getMovies, refresh, click, show }) => {\r\n    let drawerClasses = 'side-drawer';\r\n    if (show) {\r\n        drawerClasses = 'side-drawer open';\r\n    }\r\n\r\n    return (\r\n        <nav className={drawerClasses}>\r\n            <ul>\r\n                <form onSubmit={getMovies} >\r\n                    <input className=\"sideSearchInput\" type=\"text\" placeholder=\"Titre du film\" name=\"nomFilm\"></input>\r\n                </form>\r\n                <Link to=\"/\" exact onClick={refresh, click}>\r\n                    <li>Accueil</li>\r\n                </Link>\r\n                <Link to=\"/actions\" onClick={refresh, click}>\r\n                    <li>Actions</li>\r\n                </Link>\r\n                <Link to=\"/aventure\" onClick={refresh, click}>\r\n                    <li>Aventure</li>\r\n                </Link>\r\n                <Link to=\"/comedie\" onClick={refresh, click}>\r\n                    <li>Com√©die</li>\r\n                </Link>\r\n                <Link to=\"/horreur\" onClick={refresh, click}>\r\n                    <li>Horreur</li>\r\n                </Link>\r\n                <Link to=\"/thriller\" onClick={refresh, click}>\r\n                    <li>Thriller</li>\r\n                </Link>\r\n            </ul>\r\n\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default sideDrawer;","D:\\Projet React\\site-streaming\\src\\Components\\Navbar\\Header.jsx",[],"D:\\Projet React\\site-streaming\\src\\Components\\FilmsDetails\\FilmsDetails.jsx",["95","96"],"import React, { useEffect, useState } from 'react';\r\nimport './FilmsDetails.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchFilmsDetails } from '../../redux/filmsDetails/filmsDetailsActions';\r\n\r\n\r\nconst FilmsDetails = ({ match, fetchFilmsDetails, filmsDetails }) => {\r\n\r\n    useEffect(() => {\r\n        fetchFilmsDetails();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flexBox\" >\r\n            <div className=\"videoContainer\">\r\n                <div className=\"titreFilms\"><h1 className=\"titre\">{filmsDetails.filmsDetailsFetched && filmsDetails.filmsDetailsFetched.title}</h1></div>\r\n                <img alt={\"\"} src={`https://image.tmdb.org/t/p/original${filmsDetails.filmsDetailsFetched && filmsDetails.filmsDetailsFetched.backdrop_path}`} />\r\n            </div>\r\n            <div className=\"infosDiv\">\r\n                <p className=\"filmsOverview\">{filmsDetails.filmsDetailsFetched && filmsDetails.filmsDetailsFetched.overview}</p>\r\n                <p className=\"filmsOverview\">Titre original: &nbsp;&nbsp;&nbsp;&nbsp; {filmsDetails.filmsDetailsFetched && filmsDetails.filmsDetailsFetched.original_title}</p>\r\n                <p className=\"filmsOverview\">Date de sortie: &nbsp;&nbsp;&nbsp;&nbsp; {filmsDetails.filmsDetailsFetched && filmsDetails.filmsDetailsFetched.release_date}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filmsDetails: state.filmsDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchFilmsDetails: () => dispatch(fetchFilmsDetails(ownProps.match.params.id))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmsDetails);","D:\\Projet React\\site-streaming\\src\\Components\\FilmsWithGenres\\FilmsWithGenres.jsx",["97","98"],"import React, { useState, useEffect } from 'react';\r\nimport './FilmsWithGenres.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { fetchFilmsWithGenres } from '../../redux/filmWithGenres/filmWithGenresActions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst FilmsWithGenres = ({ id, titreSection, filmsData, fetchFilmsWithGenres, filmSearch }) => {\r\n\r\n    const filmsTotalResults = filmsData.totalResults && filmsData.totalResults;\r\n\r\n    useEffect(() => {\r\n        fetchFilmsWithGenres(id, 1);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flexBox\" >\r\n                <div className=\"titreSection\"><h1 className=\"titre\">{titreSection}</h1></div>\r\n                {filmSearch.searchFilmsFetched && filmSearch.searchFilmsFetched.results && filmSearch.searchFilmsFetched.results.length > 0 ? filmSearch.searchFilmsFetched.results.map((search, index) => (\r\n                    <div className=\"cardFilm\" key={index}>\r\n                        <div className=\"playIcon\">\r\n                            <Link to={`/${search.id}`} className=\"icon\" title=\"Regarder\">\r\n                                <FontAwesomeIcon icon={faPlayCircle} />\r\n                            </Link>\r\n                            <p className=\"titres\">{search.title}</p>\r\n                        </div>\r\n                        <img alt={\"\"} src={`https://image.tmdb.org/t/p/original${search.poster_path}`} />\r\n                    </div>\r\n                )) : filmsData.filmsFetched && filmsData.filmsFetched.results.map((search, index) => (\r\n                    <div className=\"cardFilm\" key={index}>\r\n                        <div className=\"playIcon\">\r\n                            <Link to={`/${search.id}`} className=\"icon\" title=\"Regarder\">\r\n                                <FontAwesomeIcon icon={faPlayCircle} />\r\n                            </Link>\r\n                            <p className=\"titres\">{search.title}</p>\r\n                        </div>\r\n                        <img alt={\"\"} src={`https://image.tmdb.org/t/p/original${search.poster_path}`} />\r\n                    </div>\r\n                ))}\r\n            </div >\r\n            {filmsTotalResults > 20 ? <Pagination id={id} /> : ''}\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filmsData: state.filmsWithGenres,\r\n        filmSearch: state.filmSearch\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchFilmsWithGenres: (id, page) => dispatch(fetchFilmsWithGenres(id, page))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmsWithGenres);\r\n","D:\\Projet React\\site-streaming\\src\\redux\\filmWithGenres\\types.js",[],"D:\\Projet React\\site-streaming\\src\\redux\\filmsDetails\\types.js",[],"D:\\Projet React\\site-streaming\\src\\redux\\filmSearch\\types.js",[],"D:\\Projet React\\site-streaming\\src\\Components\\SideDrawer\\DrawerToggleButton.js",[],"D:\\Projet React\\site-streaming\\src\\redux\\filmWithGenres\\filmWithGenresActions.js",[],"D:\\Projet React\\site-streaming\\src\\redux\\filmSearch\\filmSearchActions.js",[],"D:\\Projet React\\site-streaming\\src\\redux\\filmsDetails\\filmsDetailsActions.js",[],"D:\\Projet React\\site-streaming\\src\\Components\\Pagination\\Pagination.jsx",["99","100","101","102","103"],"import React from 'react';\r\nimport './Pagination.css';\r\n\r\nimport { fetchFilmsWithGenres } from '../../redux/filmWithGenres/filmWithGenresActions';\r\nimport { connect, useDispatch } from 'react-redux';\r\n\r\n\r\nconst Pagination = ({ id, filmsData }) => {\r\n    const pageLinks = []\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const filmsTotalPages = filmsData.totalPages && filmsData.totalPages;\r\n    const filmsCurrentPage = filmsData.currentPage && filmsData.currentPage;\r\n\r\n    for (let i = 1; i <= filmsTotalPages; i++) {\r\n        let active = filmsCurrentPage === i ? 'active' : '';\r\n\r\n        pageLinks.push(<li className={`paginationList ${active}`} key={i} onClick={() => dispatch(fetchFilmsWithGenres(id, i))}><a >{i}</a></li>)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"paginationContainer\">\r\n            <ul className=\"paginationList\">\r\n                {filmsCurrentPage > 1 ? <li onClick={() => dispatch(fetchFilmsWithGenres(id, filmsCurrentPage - 1))}><a className={`paginationList`}>Prec</a></li> : ''}\r\n                {filmsCurrentPage > 1 ? <li onClick={() => dispatch(fetchFilmsWithGenres(id, filmsTotalPages - filmsTotalPages + 1))}><a className={`paginationList`}> &#60;&#60; </a></li> : ''}\r\n                {pageLinks[filmsCurrentPage - 3]}{pageLinks[filmsCurrentPage - 2]}{pageLinks[filmsCurrentPage - 1]}{pageLinks[filmsCurrentPage]}{pageLinks[filmsCurrentPage + 1]}\r\n                {filmsCurrentPage > 1 && filmsCurrentPage !== filmsTotalPages ? <li onClick={() => dispatch(fetchFilmsWithGenres(id, filmsTotalPages))}><a className={`paginationList`}>>></a></li> : ''}\r\n                {filmsCurrentPage < filmsTotalPages + 1 && filmsCurrentPage !== filmsTotalPages ? <li onClick={() => dispatch(fetchFilmsWithGenres(id, filmsCurrentPage + 1))}><a className={`paginationList`}>Suivant</a></li> : ''}\r\n            </ul>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filmsData: state.filmsWithGenres,\r\n        filmSearch: state.filmSearch\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchFilmsWithGenres: (id, page) => dispatch(fetchFilmsWithGenres(id, page))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":17,"column":52,"nodeType":"110","messageId":"111","endLine":17,"endColumn":53},{"ruleId":"108","severity":1,"message":"109","line":20,"column":53,"nodeType":"110","messageId":"111","endLine":20,"endColumn":54},{"ruleId":"108","severity":1,"message":"109","line":23,"column":54,"nodeType":"110","messageId":"111","endLine":23,"endColumn":55},{"ruleId":"108","severity":1,"message":"109","line":26,"column":53,"nodeType":"110","messageId":"111","endLine":26,"endColumn":54},{"ruleId":"108","severity":1,"message":"109","line":29,"column":53,"nodeType":"110","messageId":"111","endLine":29,"endColumn":54},{"ruleId":"108","severity":1,"message":"109","line":32,"column":54,"nodeType":"110","messageId":"111","endLine":32,"endColumn":55},{"ruleId":"112","severity":1,"message":"113","line":1,"column":28,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"117","line":12,"column":8,"nodeType":"118","endLine":12,"endColumn":10,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"120","line":18,"column":8,"nodeType":"118","endLine":18,"endColumn":10,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":20,"column":129,"nodeType":"124","endLine":20,"endColumn":133},{"ruleId":"122","severity":1,"message":"123","line":27,"column":118,"nodeType":"124","endLine":27,"endColumn":150},{"ruleId":"122","severity":1,"message":"123","line":28,"column":135,"nodeType":"124","endLine":28,"endColumn":167},{"ruleId":"122","severity":1,"message":"123","line":30,"column":153,"nodeType":"124","endLine":30,"endColumn":185},{"ruleId":"122","severity":1,"message":"123","line":31,"column":176,"nodeType":"124","endLine":31,"endColumn":208},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchFilmsDetails'. Either include it or remove the dependency array. If 'fetchFilmsDetails' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["127"],"React Hook useEffect has missing dependencies: 'fetchFilmsWithGenres' and 'id'. Either include them or remove the dependency array. If 'fetchFilmsWithGenres' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["128"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [fetchFilmsDetails]",{"range":"133","text":"134"},"Update the dependencies array to be: [fetchFilmsWithGenres, id]",{"range":"135","text":"136"},[346,348],"[fetchFilmsDetails]",[701,703],"[fetchFilmsWithGenres, id]"]